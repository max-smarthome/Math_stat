#2)осчитать коэффициент линейной регрессии при заработной плате (zp),
# используя градиентный спуск (без intercept).


import numpy as np


x = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
y = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])
n = len(y)

def mse(B1, y=y, x=x, n = len(y)):
    return np.sum((B1 * x - y) **2)

alpha = 1e-6
B1 = 0.1

for i in range(1001):
    B1 -= alpha * (2/n) * np.sum((B1*x - y) * x)
    if i % 200 == 0:
        print(f'iter={i} B1={B1} mse={mse(B1)}')

'''
iter=0 B1=0.25952808 mse=4932377.212546963
iter=200 B1=5.868748638669329 mse=565229.7550129376
iter=400 B1=5.8897415574471985 mse=565168.5850140053
iter=600 B1=5.889820124983314 mse=565168.5841572062
iter=800 B1=5.88982041902807 mse=565168.584157194
iter=1000 B1=5.8898204201285544 mse=565168.5841571941'''